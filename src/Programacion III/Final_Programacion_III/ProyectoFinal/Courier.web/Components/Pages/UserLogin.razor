@layout LoginLayout
@page "/login"
@using Courier.Web.Components.Data
@using Microsoft.EntityFrameworkCore
@inject DataContext Dc
@inject IJSRuntime Jsx
@inject NavigationManager Navigation


<PageTitle>Login</PageTitle>

<div class="background-container">

    <form @onsubmit="Buscarlogin" class="container form-container">

        <h3>Iniciar Sesión</h3>



        <div class="form-group mt-3">
            <label class="label" for="username">Usuario</label>
            <input  class="form-control" id="username" name="loginusername" @bind="login.Usuario" />
        </div>

        <div class="form-group mt-3">
            <label for="password">Contraseña</label>
            <input class="form-control" id="password" type="password" @bind="login.Contrasena" />
        </div>

        <div class="mt-3">
            <button class="btn-primary btn" id="botoniniciar" type="submit">Iniciar</button>
        </div>
        <div class="linkCrearCuenta-container">
            <p>
                Aun no tengo una cuenta
                <a class="linkcrear" id="crearcuenta" href="/singIn">Crear Cuenta</a>
            </p>

        </div>
    </form>

</div>

@code {


    private ClaseLogin login = new ClaseLogin();

    private async Task Buscarlogin()
    {
        if (string.IsNullOrWhiteSpace(login.Usuario) )
        {
            await Jsx.InvokeVoidAsync("alert", "El usuario debe ser completado");
            return;
        }
        else if (string.IsNullOrWhiteSpace(login.Contrasena))
        {
            await Jsx.InvokeVoidAsync("alert", "La contraseña debe ser completada");
            return;
        }
        else{
            var usuario = await Dc.LoginDB
        .FirstOrDefaultAsync(u => u.Usuario == login.Usuario && u.Contrasena == login.Contrasena);

            if (usuario != null)
            {
                SessionService.UsuarioActualId = usuario.Id.ToString();
                await Jsx.InvokeVoidAsync("alert", "Inicio de sesión exitoso");
                Navigation.NavigateTo("/pre_alerta");
                

            }
            else
            {
                await Jsx.InvokeVoidAsync("alert", "Usuario o contraseña incorrectos");

            }
        }

    }

    

    
}
