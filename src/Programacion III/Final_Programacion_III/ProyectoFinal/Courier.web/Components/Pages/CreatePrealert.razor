@page "/crear_alerta/0"
@page "/crear_alerta/{Id:int}"
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Nav
@using Courier.Web.Components.Data
@inject DataContext DBctx
@inject IJSRuntime JSRuntime

<dialog id="dialogoMensaje" class="dialogo">
    <p>ï¿½Deseas Cancelar esta Pre-alerta?</p>
    <button class="btn btn-primary" id="no45456" style="margin-right:50px;" @onclick="CerrarDialogo">No</button>
    <button class="btn btn-danger" id="si45456" @onclick="Volver">Si</button>
</dialog>

<div class="pre-alerta">

    <svg xmlns="http://www.w3.org/2000/svg" height="48px" viewBox="0 -960 960 960" width="48px" fill="#e3e3e3"><path d="M480-80q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-156t86-127Q252-817 325-848.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 29-4 58t-12 56q-11-11-24.5-19T810-397q5-20 7.5-40.5T820-480q0-142-99-241t-241-99q-141 0-240.5 99T140-480q0 141 99.5 240.5T480-140q58 0 110-18.5t95-50.5q10 12 22 22t26 16q-52 43-116.5 67T480-80Zm300-161q-17 0-28.5-11.5T740-281q0-17 11.5-28.5T780-321q17 0 28.5 11.5T820-281q0 17-11.5 28.5T780-241Zm-153-46L453-468v-225h60v201l159 160-45 45Z" /></svg>
    <span>Crear Pre-alerta</span>
</div>

<div class="container" style="position:absolute; top:100px;">



    <EditForm Model="@prealerta" OnValidSubmit="Guardar">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mt-2">
            <label for="transportista" style="color:#cfcfcf;" >Trasportista</label>
            <InputText id="transportista" class="form-control" @bind-Value="prealerta.Trasportista" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="form-group mt-2">
            <label for="tracking" style="color:#cfcfcf;">Tracking</label>
            <InputText id="tracking" class="form-control" @bind-Value="prealerta.Tracking" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="form-group mt-2">
            <label for="entrega_estimada" style="color:#cfcfcf;">Entrega Estimada</label>
            <InputDate id="entrega_estimada" class="form-control" @bind-Value="prealerta.EntregaEstimada" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="form-group mt-2">
            <label for="proveedor" style="color:#cfcfcf;">Proveedor</label>
            <InputText id="proveedor" class="form-control" @bind-Value="prealerta.Proveedor" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="form-group mt-2">
            <label for="valor" style="color:#cfcfcf;">Valor</label>
            <InputNumber id="valor" class="form-control" @bind-Value="prealerta.Valor" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="form-group mt-2">
            <label for="contenido" style="color:#cfcfcf;">Contenido</label>
            <InputText id="contenido" class="form-control" @bind-Value="prealerta.Contenido" style=" border: 2px solid #cfcfcf; color:#cfcfcf; background-color: #252525; " />
        </div>

        <div class="row mt-4">

            <div class="col">
                <button class="btn btn-success" id="guardar_form" type="submit">
                    Guardar
                </button>
            </div>

            <div class="col">
                <button class="btn btn-danger" id="cancelar_boton" type="button" @onclick="MostrarDialogo">
                    Cancelar
                </button>
            </div>

        </div>

    </EditForm>




</div>

@code {


    [Parameter] public int Id { get; set; }

    PreAlertas prealerta = new PreAlertas();


    private async Task Guardar()
    {
        if (prealerta.Id > 0)
        {
            DBctx.PreaAlertasDb.Update(prealerta);
            prealerta.HistoryId = prealerta.Id;
        }
        else
        {
            prealerta.UsuarioId = SessionService.UsuarioActualId;
            DBctx.PreaAlertasDb.Add(prealerta);
            await DBctx.SaveChangesAsync();
            prealerta.HistoryId = prealerta.Id;
            DBctx.PreaAlertasDb.Update(prealerta);
        }

        
        
        try{
            await DBctx.SaveChangesAsync();
        }
        catch (Exception ex)
        {
         
            var mensaje = ex.InnerException?.Message ?? ex.Message;
            await JSRuntime.InvokeVoidAsync("alert", $"Error al guardar: {mensaje}");
        }
        
        await JSRuntime.InvokeVoidAsync("GuardadoExitoso");
        prealerta = new PreAlertas();

        
        
        

    }


    protected override async Task OnInitializedAsync()
    {
        if (!SessionService.EstaLogeado)
        {
            Nav.NavigateTo("/login", forceLoad: true);
        }else{
            if (Id != 0)
            {
                

                prealerta = await DBctx.PreaAlertasDb
                    .FindAsync(Id) ?? new PreAlertas();
            }
        }
        

        
    }

    private ElementReference dialogo;

    private async Task MostrarDialogo()
    {
        await JSRuntime.InvokeVoidAsync("mostrarDialogo");
    }

    private async Task CerrarDialogo()
    {
        await JSRuntime.InvokeVoidAsync("cerrarDialogo");
    }

    private async Task Volver()
    {
        await CerrarDialogo();
        await Task.Delay(2000);
        Nav.NavigateTo("pre_alerta");
        
    }

}